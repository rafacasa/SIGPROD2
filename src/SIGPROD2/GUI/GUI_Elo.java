/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SIGPROD2.GUI;

import SIGPROD2.Auxiliar.Arquivo;
import SIGPROD2.Auxiliar.Erro;
import SIGPROD2.DAO.EloKDao;
import SIGPROD2.DAO.PontoCurvaDAO;
import SIGPROD2.Modelo.EloK;
import SIGPROD2.Modelo.PontoCurva;
import SIGPROD2.Modelo.Tabelas.PontoCurvaTableModel;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author sbrunettajr
 */
public class GUI_Elo extends javax.swing.JFrame {

    /*
     * Creates new form GUI_Elo
     */
    private PontoCurvaTableModel modeloMaximo;
    private PontoCurvaTableModel modeloMinimo;
    private PontoCurvaTableModel modelo_minimo_carregar;
    private PontoCurvaTableModel modelo_maximo_Carregar;
    private EloK newElo;
    private ArrayList<EloK> correntes;

    private boolean aba_carregar_elo_selecionada;
    private boolean aba_elos_transformador_selecionada;

    public GUI_Elo() {
        initComponents();
        configurarTabelas();
        carregarCorrentes();
    }

    private void carregarCorrentes() {
        try {
            this.correntes = EloKDao.buscarCorrentes();
            for (EloK elo : this.correntes) {
                this.listaCorrentes.addItem(elo);
            }
        } catch (SQLException ex) {
            Erro.mostraMensagemSQL(this, ex);
        }

    }

    private void carregarElo() {
        EloK selecionado = (EloK) this.listaCorrentes.getSelectedItem();
        ArrayList<PontoCurva> lista;
        if (selecionado != null) {
            try {
                this.preferencial2.setSelected(selecionado.isPreferencial());
                lista = PontoCurvaDAO.buscaPontosCurva(selecionado.getCorrenteNominal(),
                        PontoCurva.PONTODACURVAMAXIMA);
                this.modelo_maximo_Carregar.add(lista);
                lista = PontoCurvaDAO.buscaPontosCurva(selecionado.getCorrenteNominal(),
                        PontoCurva.PONTODACURVAMINIMA);
                this.modelo_minimo_carregar.add(lista);
                this.modelo_maximo_Carregar.fireTableDataChanged();
                this.modelo_minimo_carregar.fireTableDataChanged();
            } catch (SQLException ex) {
                Erro.mostraMensagemSQL(this, ex);
            }
        }
    }

    private void configurarTabelas() {
        modeloMaximo = new PontoCurvaTableModel();
        this.tabelaCurvaMaxima.setModel(modeloMaximo);
        this.tabelaCurvaMaxima.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.tabelaCurvaMaxima.setRowSorter(new TableRowSorter(modeloMaximo));

        modeloMinimo = new PontoCurvaTableModel();
        this.tabelaCurvaMinimo.setModel(modeloMinimo);
        this.tabelaCurvaMinimo.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.tabelaCurvaMinimo.setRowSorter(new TableRowSorter(modeloMinimo));

        modelo_minimo_carregar = new PontoCurvaTableModel();
        this.tabelaCurvaMinimoCarregar.setModel(modelo_minimo_carregar);
        this.tabelaCurvaMinimoCarregar.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        //this.tabelaCurvaMinimoCarregar.setRowSorter(new TableRowSorter(modelo_minimo_carregar));

        modelo_maximo_Carregar = new PontoCurvaTableModel();
        this.tabelaCurvaMaximaCarregar.setModel(modelo_maximo_Carregar);
        this.tabelaCurvaMaximaCarregar.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        //this.tabelaCurvaMaximaCarregar.setRowSorter(new TableRowSorter(modelo_maximo_Carregar));

        /*modeloTransformadorMono = new TransformadorTableModel();
         table_transformadorMono.setModel(modeloTransformadorMono);
         table_transformadorMono.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

         modeloTransformadorTri = new TransformadorTableModel();
         table_transformadorTri.setModel(modeloTransformadorTri);
         table_transformadorTri.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        type = new javax.swing.JLabel();
        corrente_nominal = new javax.swing.JLabel();
        correnteNominal = new javax.swing.JTextField();
        preferencial = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        tabelaCurva = new javax.swing.JScrollPane();
        tabelaCurvaMinimo = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        correnteFusao = new javax.swing.JTextField();
        tempoFusao = new javax.swing.JTextField();
        removeCurvaMinima = new javax.swing.JButton();
        addCurvaMinima = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        correnteInterrupcao = new javax.swing.JTextField();
        tempoInterrupcao = new javax.swing.JTextField();
        tabelaPonto = new javax.swing.JScrollPane();
        tabelaCurvaMaxima = new javax.swing.JTable();
        addCurvaMaxima = new javax.swing.JButton();
        removeCurvaMaxima = new javax.swing.JButton();
        inserir = new javax.swing.JButton();
        arquivo = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        type2 = new javax.swing.JLabel();
        corrente_nominal2 = new javax.swing.JLabel();
        preferencial2 = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        tabelaCurva2 = new javax.swing.JScrollPane();
        tabelaCurvaMinimoCarregar = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        correnteFusao2 = new javax.swing.JTextField();
        tempoFusao2 = new javax.swing.JTextField();
        removeCurvaMinima2 = new javax.swing.JButton();
        addCurvaMinima2 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        correnteInterrupcao2 = new javax.swing.JTextField();
        tempoInterrupcao2 = new javax.swing.JTextField();
        tabelaPonto2 = new javax.swing.JScrollPane();
        tabelaCurvaMaximaCarregar = new javax.swing.JTable();
        addCurvaMaxima2 = new javax.swing.JButton();
        removeCurvaMaxima2 = new javax.swing.JButton();
        arquivo1 = new javax.swing.JButton();
        listaCorrentes = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        type.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        type.setText("Tipo K");

        corrente_nominal.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        corrente_nominal.setText("Corrente Nominal");

        preferencial.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        preferencial.setText("Preferencial");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Curva de Minima Fus√£o"));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 275));

        tabelaCurva.setPreferredSize(new java.awt.Dimension(150, 480));

        tabelaCurvaMinimo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Corrente", "Tempo"
            }
        ));
        tabelaCurva.setViewportView(tabelaCurvaMinimo);

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Corrente ");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setText("Tempo");

        removeCurvaMinima.setText("-");
        removeCurvaMinima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCurvaMinimaActionPerformed(evt);
            }
        });

        addCurvaMinima.setText("+");
        addCurvaMinima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCurvaMinimaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(tabelaCurva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeCurvaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tempoFusao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addCurvaMinima, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(correnteFusao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(correnteFusao, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tempoFusao, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(addCurvaMinima))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tabelaCurva, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(removeCurvaMinima)
                        .addGap(0, 180, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Curva de M√°xima Interrup√ß√£o"));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 300));

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setText("Corrente");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setText("Tempo");

        tabelaCurvaMaxima.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Corrente", "Tempo"
            }
        ));
        tabelaPonto.setViewportView(tabelaCurvaMaxima);

        addCurvaMaxima.setText("+");
        addCurvaMaxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCurvaMaximaActionPerformed(evt);
            }
        });

        removeCurvaMaxima.setText("-");
        removeCurvaMaxima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCurvaMaximaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(tabelaPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeCurvaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(tempoInterrupcao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addCurvaMaxima, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(correnteInterrupcao, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(correnteInterrupcao, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tempoInterrupcao, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCurvaMaxima))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(removeCurvaMaxima))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tabelaPonto, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        inserir.setText("Inserir ");
        inserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inserirActionPerformed(evt);
            }
        });

        arquivo.setText("Arquivo");
        arquivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arquivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(arquivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inserir))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(90, 90, 90)
                                .addComponent(type)
                                .addGap(53, 53, 53)
                                .addComponent(corrente_nominal)
                                .addGap(5, 5, 5)
                                .addComponent(correnteNominal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(preferencial))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type)
                    .addComponent(corrente_nominal)
                    .addComponent(correnteNominal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(preferencial))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arquivo)
                    .addComponent(inserir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Novo Elo de Ramal", jPanel1);

        type2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        type2.setText("Tipo K");

        corrente_nominal2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        corrente_nominal2.setText("Corrente Nominal");

        preferencial2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        preferencial2.setText("Preferencial");

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Curva de Minima Fus√£o"));
        jPanel9.setPreferredSize(new java.awt.Dimension(300, 275));

        tabelaCurva2.setPreferredSize(new java.awt.Dimension(150, 480));

        tabelaCurvaMinimoCarregar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Corrente", "Tempo"
            }
        ));
        tabelaCurva2.setViewportView(tabelaCurvaMinimoCarregar);

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel9.setText("Corrente ");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel10.setText("Tempo");

        removeCurvaMinima2.setText("-");
        removeCurvaMinima2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCurvaMinima2ActionPerformed(evt);
            }
        });

        addCurvaMinima2.setText("+");
        addCurvaMinima2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCurvaMinima2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(tabelaCurva2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeCurvaMinima2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tempoFusao2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addCurvaMinima2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(correnteFusao2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(151, 151, 151))))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(correnteFusao2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tempoFusao2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(addCurvaMinima2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tabelaCurva2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(removeCurvaMinima2)
                        .addGap(0, 180, Short.MAX_VALUE)))
                .addGap(18, 18, 18))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Curva de M√°xima Interrup√ß√£o"));
        jPanel10.setPreferredSize(new java.awt.Dimension(300, 300));

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel11.setText("Corrente");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel12.setText("Tempo");

        tabelaCurvaMaximaCarregar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Corrente", "Tempo"
            }
        ));
        tabelaPonto2.setViewportView(tabelaCurvaMaximaCarregar);

        addCurvaMaxima2.setText("+");
        addCurvaMaxima2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCurvaMaxima2ActionPerformed(evt);
            }
        });

        removeCurvaMaxima2.setText("-");
        removeCurvaMaxima2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeCurvaMaxima2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(tabelaPonto2, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeCurvaMaxima2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(tempoInterrupcao2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addCurvaMaxima2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(correnteInterrupcao2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(correnteInterrupcao2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(tempoInterrupcao2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCurvaMaxima2))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tabelaPonto2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(removeCurvaMaxima2)))
                .addContainerGap())
        );

        arquivo1.setText("Arquivo");
        arquivo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arquivo1ActionPerformed(evt);
            }
        });

        listaCorrentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaCorrentesActionPerformed(evt);
            }
        });

        jButton1.setText("Deletar");

        jButton2.setText("Atualizar");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(type2)
                .addGap(53, 53, 53)
                .addComponent(corrente_nominal2)
                .addGap(5, 5, 5)
                .addComponent(listaCorrentes, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(preferencial2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(arquivo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type2)
                    .addComponent(corrente_nominal2)
                    .addComponent(preferencial2)
                    .addComponent(listaCorrentes, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(arquivo1)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Carregar Elo", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void arquivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arquivoActionPerformed
        GUI_SelecionaArquivo select = new GUI_SelecionaArquivo(this, true);
        select.setVisible(true);
    }//GEN-LAST:event_arquivoActionPerformed

    private void arquivo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arquivo1ActionPerformed
        GUI_SelecionaArquivo select = new GUI_SelecionaArquivo(this, false);
        select.setVisible(true);
    }//GEN-LAST:event_arquivo1ActionPerformed

    private void addCurvaMinimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCurvaMinimaActionPerformed
        if (!this.correnteFusao.getText().equals("") && !this.tempoFusao.getText().equals("")) {

            double corrente = Double.parseDouble(this.correnteFusao.getText());
            double tempo = Double.parseDouble(this.tempoFusao.getText());
            PontoCurva pc = new PontoCurva(corrente, tempo);
            this.modeloMinimo.add(pc);
            this.modeloMinimo.fireTableDataChanged();

            this.correnteFusao.setText(null);
            this.tempoFusao.setText(null);
        } else {
            Erro.camposVazios(this);
        }
    }//GEN-LAST:event_addCurvaMinimaActionPerformed

    private void removeCurvaMinimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCurvaMinimaActionPerformed
        int row = tabelaCurvaMinimo.getSelectedRow();
        if (row != -1) {
            this.modeloMinimo.remove(row);
        } else {
            Erro.rowNotSelected(this);
        }
    }//GEN-LAST:event_removeCurvaMinimaActionPerformed

    private void addCurvaMaximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCurvaMaximaActionPerformed
        if (!this.correnteInterrupcao.getText().equals("") && !this.tempoInterrupcao.getText().equals("")) {

            double corrente = Double.parseDouble(this.correnteInterrupcao.getText());
            double tempo = Double.parseDouble(this.tempoInterrupcao.getText());
            PontoCurva pc = new PontoCurva(corrente, tempo);
            this.modeloMaximo.add(pc);
            this.modeloMaximo.fireTableDataChanged();

            this.correnteInterrupcao.setText(null);
            this.tempoInterrupcao.setText(null);
        } else {
            Erro.camposVazios(this);
        }
    }//GEN-LAST:event_addCurvaMaximaActionPerformed

    private void inserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inserirActionPerformed
        if (!this.correnteNominal.getText().equals("")) {
            this.newElo = new EloK(Integer.parseInt(this.correnteNominal.getText()),
                    preferencial.isSelected(),
                    this.modeloMinimo.getArrayList(),
                    this.modeloMaximo.getArrayList());
            try {
                EloKDao.insereEloK(newElo);
                System.out.println("ADICIONOU"); //TIRA ESSA POHA DAKI
                this.listaCorrentes.addItem(newElo);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } else {
            Erro.correnteNominalVoid(this);
        }
    }//GEN-LAST:event_inserirActionPerformed

    private void removeCurvaMaximaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCurvaMaximaActionPerformed
        int row = tabelaCurvaMaxima.getSelectedRow();
        if (row != -1) {
            this.modeloMaximo.remove(row);
        } else {
            Erro.rowNotSelected(this);
        }
    }//GEN-LAST:event_removeCurvaMaximaActionPerformed

    private void addCurvaMinima2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCurvaMinima2ActionPerformed
        if (!this.correnteFusao2.getText().equals("") && !this.tempoFusao2.getText().equals("")) {

            double corrente = Double.parseDouble(this.correnteFusao2.getText());
            double tempo = Double.parseDouble(this.tempoFusao2.getText());
            PontoCurva pc = new PontoCurva(corrente, tempo);
            this.modelo_minimo_carregar.add(pc);
            this.modelo_minimo_carregar.fireTableDataChanged();

            this.correnteFusao2.setText(null);
            this.tempoFusao2.setText(null);
        } else {
            Erro.camposVazios(this);
        }
    }//GEN-LAST:event_addCurvaMinima2ActionPerformed

    private void removeCurvaMinima2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCurvaMinima2ActionPerformed
        int row = tabelaCurvaMinimoCarregar.getSelectedRow();
        if (row != -1) {
            this.modelo_minimo_carregar.remove(row);
        } else {
            Erro.rowNotSelected(this);
        }
    }//GEN-LAST:event_removeCurvaMinima2ActionPerformed

    private void addCurvaMaxima2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCurvaMaxima2ActionPerformed
        if (!this.correnteInterrupcao2.getText().equals("") && !this.tempoInterrupcao2.getText().equals("")) {

            double corrente = Double.parseDouble(this.correnteInterrupcao2.getText());
            double tempo = Double.parseDouble(this.tempoInterrupcao2.getText());
            PontoCurva pc = new PontoCurva(corrente, tempo);
            this.modelo_maximo_Carregar.add(pc);
            this.modelo_maximo_Carregar.fireTableDataChanged();

            this.correnteInterrupcao2.setText(null);
            this.tempoInterrupcao2.setText(null);
        } else {
            Erro.camposVazios(this);
        }
    }//GEN-LAST:event_addCurvaMaxima2ActionPerformed

    private void removeCurvaMaxima2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeCurvaMaxima2ActionPerformed
        int row = tabelaCurvaMaximaCarregar.getSelectedRow();
        if (row != -1) {
            this.modelo_maximo_Carregar.remove(row);
        } else {
            Erro.rowNotSelected(this);
        }
    }//GEN-LAST:event_removeCurvaMaxima2ActionPerformed

    private void listaCorrentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaCorrentesActionPerformed
        carregarElo();
    }//GEN-LAST:event_listaCorrentesActionPerformed

    public void setArquivo(Arquivo file) {
        if (file != null && file.existeArquivo()) {
            if (file.podeLerArquivo()) {
                if (file.abreArquivo()) {

                    modeloMaximo.removeTodos();
                    modeloMinimo.removeTodos();

                    String texto = file.lerArquivo();
                    String linhas[] = texto.split("\r");

                    for (int i = 0; i < linhas.length; i++) {
                        if (!linhas[i].equals("")) {
                            String valores[] = linhas[i].split(" ");
                            double corrente = Double.parseDouble(valores[0]);
                            double tempo = Double.parseDouble(valores[1]);
                            int ehMax = Integer.parseInt(valores[2]);
                            if (ehMax == 1) {
                                this.modeloMaximo.add(new PontoCurva(corrente, tempo));
                            } else {
                                this.modeloMinimo.add(new PontoCurva(corrente, tempo));
                            }
                        }
                    }
                    modeloMaximo.fireTableDataChanged();
                    modeloMinimo.fireTableDataChanged();
                } else {
                    Erro.mostraMensagem(this, "ERRO: N√£o foi poss√≠vel abrir o arquivo.");
                }
            } else {
                Erro.mostraMensagem(this, "ERRO: N√£o tem permiss√£o de leitura.");
            }
        } else {
            Erro.mostraMensagem(this, "ERRO: Arquivo inexistente.");
        }
    }

    public void setArquivoCarregar(Arquivo file) {
        if (file != null && file.existeArquivo()) {
            if (file.podeLerArquivo()) {
                if (file.abreArquivo()) {

                    modelo_minimo_carregar.removeTodos();
                    modelo_maximo_Carregar.removeTodos();

                    String texto = file.lerArquivo();
                    String linhas[] = texto.split("\r");

                    for (int i = 0; i < linhas.length; i++) {
                        if (!linhas[i].equals("")) {
                            String valores[] = linhas[i].split(" ");
                            double corrente = Double.parseDouble(valores[0]);
                            double tempo = Double.parseDouble(valores[1]);
                            int ehEbulicao = Integer.parseInt(valores[2]);
                            if (ehEbulicao == 1) {
                                this.modeloMaximo.add(new PontoCurva(corrente, tempo));
                            } else {
                                this.modeloMinimo.add(new PontoCurva(corrente, tempo));
                            }
                        }
                    }
                    modelo_maximo_Carregar.fireTableDataChanged();
                    modelo_minimo_carregar.fireTableDataChanged();
                } else {
                    Erro.mostraMensagem(this, "ERRO: N√£o foi poss√≠vel abrir o arquivo.");
                }
            } else {
                Erro.mostraMensagem(this, "ERRO: N√£o tem permiss√£o de leitura.");
            }
        } else {
            Erro.mostraMensagem(this, "ERRO: Arquivo inexistente.");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_Elo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_Elo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_Elo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_Elo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI_Elo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCurvaMaxima;
    private javax.swing.JButton addCurvaMaxima2;
    private javax.swing.JButton addCurvaMinima;
    private javax.swing.JButton addCurvaMinima2;
    private javax.swing.JButton arquivo;
    private javax.swing.JButton arquivo1;
    private javax.swing.JTextField correnteFusao;
    private javax.swing.JTextField correnteFusao2;
    private javax.swing.JTextField correnteInterrupcao;
    private javax.swing.JTextField correnteInterrupcao2;
    private javax.swing.JTextField correnteNominal;
    private javax.swing.JLabel corrente_nominal;
    private javax.swing.JLabel corrente_nominal2;
    private javax.swing.JButton inserir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox listaCorrentes;
    private javax.swing.JCheckBox preferencial;
    private javax.swing.JCheckBox preferencial2;
    private javax.swing.JButton removeCurvaMaxima;
    private javax.swing.JButton removeCurvaMaxima2;
    private javax.swing.JButton removeCurvaMinima;
    private javax.swing.JButton removeCurvaMinima2;
    private javax.swing.JScrollPane tabelaCurva;
    private javax.swing.JScrollPane tabelaCurva2;
    private javax.swing.JTable tabelaCurvaMaxima;
    private javax.swing.JTable tabelaCurvaMaximaCarregar;
    private javax.swing.JTable tabelaCurvaMinimo;
    private javax.swing.JTable tabelaCurvaMinimoCarregar;
    private javax.swing.JScrollPane tabelaPonto;
    private javax.swing.JScrollPane tabelaPonto2;
    private javax.swing.JTextField tempoFusao;
    private javax.swing.JTextField tempoFusao2;
    private javax.swing.JTextField tempoInterrupcao;
    private javax.swing.JTextField tempoInterrupcao2;
    private javax.swing.JLabel type;
    private javax.swing.JLabel type2;
    // End of variables declaration//GEN-END:variables
}
